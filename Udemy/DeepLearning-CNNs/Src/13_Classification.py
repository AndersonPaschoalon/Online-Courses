# -*- coding: utf-8 -*-
"""13_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13bAMnE0YOG3k3P5lniFqsWAu0FxfFEVj
"""

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
import numpy as np
import matplotlib.pyplot as plt
# model
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.models import Model
# normalization
from sklearn.preprocessing import StandardScaler

data = load_breast_cancer()
X_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.33)

# test
data.feature_names

# test
index = np.where(data.feature_names == 'mean compactness')[0][0]
sample = data.data[:, index]
plt.title('mean compactness')
plt.plot(sample)
plt.show()

N, D = X_train.shape
N, D

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# create the model
N, D = X_train.shape
i = Input(shape=(D,))
x = Dense(1, activation='sigmoid')(i)
model = Model(i, x)
model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])

r = model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=100)

plt.plot(r.history['loss'], label='loss')
plt.plot(r.history['val_loss'], label='val_loss')
plt.legend()

plt.plot(r.history['accuracy'], label='acc')
plt.plot(r.history['val_accuracy'], label='val_acc')
plt.legend()